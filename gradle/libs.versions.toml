[versions]
javalin = "6.7.0"
openapi = "6.5.0"
ebean = "15.8.1"
cactusthorn-config = "0.81"
kotlin = "2.2.20"
jackson = "2.19.2"
jose4j = "0.9.6"
json-schema-validator = "1.5.3"
json-path = "2.9.0"

postgresql = "42.7.4"
log4j = "2.25.1"
jakarta-persistence = "3.2.0"

ebean-ddl-generator = "15.8.1"
ebean-platform-postgres = "15.8.1"
ebean-migration = "13.24.0"
delight-nashorn-sandbox = "0.5.3"
jedis = "5.2.0"
minio = "8.6.0"
opencsv = "5.9"
apache-poi = "5.4.0"
jsch = "0.1.55"
jakarta-mail = "2.0.3"
jakarta-mail-api = "2.1.3"
kotlinpoet = "2.0.0"
kotlin-compile-testing = "1.6.0"
junit = "5.10.1"
mockk = "1.13.8"
testcontainers = "1.19.3"
kotest = "5.8.0"
apache-httpclient = "5.4.1"
expiring-map = "0.5.11"

[libraries]
javalin = { module = "io.javalin:javalin-bundle", version.ref = "javalin" }
ebean = { module = "io.ebean:ebean", version.ref = "ebean" }
cactusthorn-config = { module = "net.cactusthorn.config:config-core", version.ref = "cactusthorn-config" }
cactusthorn-config-compiler = { module = "net.cactusthorn.config:config-compiler", version.ref = "cactusthorn-config" }
javalin-openapi-plugin = { module = "io.javalin.community.openapi:javalin-openapi-plugin", version.ref = "openapi" }
javalin-swagger-plugin = { module = "io.javalin.community.openapi:javalin-swagger-plugin", version.ref = "openapi" }
javalin-redoc-plugin = { module = "io.javalin.community.openapi:javalin-redoc-plugin", version.ref = "openapi" }
openapi-annotation-processor = { module = "io.javalin.community.openapi:openapi-annotation-processor", version.ref = "openapi" }

jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

jose4j = { module = "org.bitbucket.b_c:jose4j", version.ref = "jose4j" }
json-schema-validator = { module = "com.networknt:json-schema-validator", version.ref = "json-schema-validator" }
json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "json-path" }

postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
log4j-slf4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence" }

ebean-ddl-generator = { module = "io.ebean:ebean-ddl-generator", version.ref = "ebean-ddl-generator" }
ebean-platform-postgres = { module = "io.ebean:ebean-platform-postgres", version.ref = "ebean-platform-postgres" }
ebean-migration = { module = "io.ebean:ebean-migration", version.ref = "ebean-migration" }
delight-nashorn-sandbox = { module = "org.javadelight:delight-nashorn-sandbox", version.ref = "delight-nashorn-sandbox" }
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }

# MinIO client for S3-compatible object storage
minio = { module = "io.minio:minio", version.ref = "minio" }

# CSV generation
opencsv = { module = "com.opencsv:opencsv", version.ref = "opencsv" }

# Excel generation
apache-poi = { module = "org.apache.poi:poi", version.ref = "apache-poi" }
apache-poi-ooxml = { module = "org.apache.poi:poi-ooxml", version.ref = "apache-poi" }

# SFTP and Email
jsch = { module = "com.jcraft:jsch", version.ref = "jsch" }
jakarta-mail = { module = "jakarta.mail:jakarta.mail-api", version.ref = "jakarta-mail-api" }
jakarta-mail-impl = { module = "org.eclipse.angus:jakarta.mail", version.ref = "jakarta-mail" }

# Annotation processing for DTO generation
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlin-compile-testing = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "kotlin-compile-testing" }

# Test dependencies
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }

# HTTP Client
apache-httpclient = { module = "org.apache.httpcomponents.client5:httpclient5", version.ref = "apache-httpclient" }

#IP address validation
ipaddress = "com.github.seancfoley:ipaddress:5.5.1"

expiring-map = { module = "net.jodah:expiringmap", version.ref = "expiring-map"}

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
ebean = { id = "io.ebean", version.ref = "ebean" }
shadow = { id = "com.github.johnrengelman.shadow", version = "8.1.1" }

